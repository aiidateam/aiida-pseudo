[build-system]
requires = ['flit_core >=3.4,<4']
build-backend = 'flit_core.buildapi'

[project]
name = 'aiida-pseudo'
dynamic = ['description', 'version']
authors = [{name = 'Sebastiaan P. Huber', email = 'mail@sphuber.net'}]
readme = 'README.md'
license = {file = 'LICENSE.txt'}
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Framework :: AiiDA',
    'License :: OSI Approved :: MIT License',
    'Operating System :: POSIX :: Linux',
    'Operating System :: MacOS :: MacOS X',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
]
keywords = ['aiida', 'pseudopotentials']
requires-python = '>=3.8'
dependencies = [
    'aiida-core~=2.1',
    'click~=8.0',
    'pint~=0.16.1',
    'requests~=2.20',
]

[project.urls]
Home = 'https://github.com/aiidateam/aiida-pseudo'
Source = 'https://github.com/aiidateam/aiida-pseudo'
Documentation = 'https://aiida-pseudo.readthedocs.io'

[project.optional-dependencies]
docs = [
    'sphinx~=6.0',
    'sphinx-copybutton~=0.5.0',
    'sphinx-book-theme~=1.0',
    'sphinx-autoapi~=3.0',
    'sphinx-click~=4.0',
]
pre-commit = [
    'pre-commit~=2.2',
    'pylint==2.15.5',
    'pylint-aiida~=0.1',
]
tests = [
    'pgtest~=1.3',
    'pytest>=6.0',
]

[project.scripts]
aiida-pseudo = 'aiida_pseudo.cli:cmd_root'

[project.entry-points.'aiida.data']
'pseudo' = 'aiida_pseudo.data.pseudo.pseudo:PseudoPotentialData'
'pseudo.jthxml' = 'aiida_pseudo.data.pseudo.jthxml:JthXmlData'
'pseudo.psf' = 'aiida_pseudo.data.pseudo.psf:PsfData'
'pseudo.psml' = 'aiida_pseudo.data.pseudo.psml:PsmlData'
'pseudo.psp8' = 'aiida_pseudo.data.pseudo.psp8:Psp8Data'
'pseudo.upf' = 'aiida_pseudo.data.pseudo.upf:UpfData'
'pseudo.vps' = 'aiida_pseudo.data.pseudo.vps:VpsData'

[project.entry-points.'aiida.groups']
'pseudo.family' = 'aiida_pseudo.groups.family.pseudo:PseudoPotentialFamily'
'pseudo.family.cutoffs' = 'aiida_pseudo.groups.family.cutoffs:CutoffsPseudoPotentialFamily'
'pseudo.family.pseudo_dojo' = 'aiida_pseudo.groups.family.pseudo_dojo:PseudoDojoFamily'
'pseudo.family.sssp' = 'aiida_pseudo.groups.family.sssp:SsspFamily'

[tool.flit.module]
name = 'aiida_pseudo'

[tool.flit.sdist]
exclude = [
    '.github/',
    'docs/',
    'tests/',
]

[tool.flynt]
line-length = 120
fail-on-change = true

[tool.isort]
force_sort_within_sections = true
include_trailing_comma = true
line_length = 120
multi_line_output = 3

[tool.pydocstyle]
ignore = [
    'D104',
    'D202',
    'D203',
    'D213'
]

[tool.pylint.master]
load-plugins = ['pylint_aiida']

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = [
    'duplicate-code',
    'import-outside-toplevel',
    'too-many-arguments',
]

[tool.pytest.ini_options]
filterwarnings = [
    'ignore:Creating AiiDA configuration folder.*:UserWarning'
]
minversion = '6.0'
testpaths = [
    'tests',
]

[tool.yapf]
align_closing_bracket_with_visual_indent = true
based_on_style = 'google'
coalesce_brackets = true
column_limit = 120
dedent_closing_brackets = true
indent_dictionary_value = false
split_arguments_when_comma_terminated = true
