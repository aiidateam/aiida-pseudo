name: cd

on:
    push:
        tags:
        -   'v[0-9]+.[0-9]+.[0-9]+*'

jobs:

    validate-release-tag:

        if: github.repository == 'aiidateam/aiida-pseudo'
        runs-on: ubuntu-latest

        steps:
        -   name: Checkout source
            uses: actions/checkout@v2

        -   name: Install Python 3.8
            uses: actions/setup-python@v4
            with:
                python-version: '3.8'

        -   name: Validate the tag version against the package version
            run: python .github/workflows/validate_release_tag.py $GITHUB_REF

    pre-commit:

        needs: [validate-release-tag]
        runs-on: ubuntu-latest

        steps:
        -   uses: actions/checkout@v2

        -   name: Install Python
            uses: actions/setup-python@v4
            with:
                python-version: '3.8'
                cache: 'pip'
                cache-dependency-path: pyproject.toml

        -   name: Install Python package and dependencies
            run: pip install -e .[pre-commit,tests]

        -   name: Run pre-commit
            run: pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

    tests:

        needs: [validate-release-tag]
        runs-on: ubuntu-latest

        strategy:
            matrix:
                python-version: ['3.7', '3.8', '3.9']

        services:
            postgres:
                image: postgres:12
            rabbitmq:
                image: rabbitmq:latest
                ports:
                -   5672:5672

        steps:
        -   uses: actions/checkout@v2

        -   name: Install Python ${{ matrix.python-version }}
            uses: actions/setup-python@v4
            with:
                python-version: ${{ matrix.python-version }}
                cache: 'pip'
                cache-dependency-path: pyproject.toml

        -   name: Install Python package and dependencies
            run: pip install -e .[tests] && reentry scan

        -   name: Run pytest
            run: pytest -sv tests

    publish:

        name: Publish to PyPI
        needs: [pre-commit, tests]
        runs-on: ubuntu-latest

        steps:
        -   name: Checkout source
            uses: actions/checkout@v2

        -   name: Install Python 3.8
            uses: actions/setup-python@v4
            with:
                python-version: '3.8'

        -   name: Install requirements
            run: pip install twine wheel

        -   name: Build the package
            run: python setup.py sdist bdist_wheel

        -   name: Publish the package
            run: twine upload dist/*
            env:
                TWINE_USERNAME: __token__
                TWINE_PASSWORD: ${{ secrets.PYPI_KEY }}
